문제1. 판다스 기초문제.

주어진 SUPERSTORE_2018-2021.xlsx 데이터는 유저의 구매내역을 담고있는 테이블이다.
여기서 아래 문제에서 요청하는 사항을 처리하는 코드를 각 셀마다 구현하여라.

참조. pd.read_csv()이 존재하는것 처럼. pd.read_excel()함수가 존재한다.
출력형태는, 함수로서 동작하도록 제작하며 문제의 함수를 실행하면 출력되는 형태로 동작하도록 한다.

1-1. 데이터 임포트 후, 데이터의 첫 10개의 행을 확인하여라.


1-2. 배송 기간이 7일 이상인 데이터 중에 표준 배송이 아닌 데이터의 수를 구하시오. 


1-3. 고유한 "제품 중분류" 리스트 를 반환하여라. (i.e. 데이터에서 제품 중분류가 중복되지 않는 리스트를 반환하여라)


1-4. 고객명별로 구매횟수 오름차순으로 반환하여라.



문제2. 수치형 - 범주형 전환문제.

데이터는 HHMM형태로 주어진 시간 데이터를 의미하고 있다.
오전 11시의 경우 1100, 오후 4시의 경우 1600시인 24시 형태를 구성하고 있다.

0601-1200까지의 시간을 오전으로 정의하고
1201-2100까지의 시간을 오후라고 정의한다
그 이외 시간대인 0000-0600, 2101-2400까지의 시간을 심야로 정의할때

다음과 같이 input을 넣었을때, output을 반환하는 코드를 만들어라.
[input]		[output]
[1100]			[‘오전’] 
[1600, 2324]		[‘오후’, ‘심야’]

출력은 함수의 형태로 진행되며 리스트의 값을 반환한다.
input과 output의 길이는 가변 길이이며
다음과 같은 형태의 예시를 지닌 함수를 만들어라
ans = solution([1110, 2110, 0421, 1610])
print(ans) # 오전, 심야, 심야, 오후 를 반환한다.



문제3. 주어진 다이아몬드 가격 세트 'Diamonds Prices2022.csv'는
Kaggle에서 주어진, 다이아몬드 예측 가격 데이터 세트이다.

3-1. 해당 데이터셋의 기초 EDA를 실시하여라. (변수의 분포, 상관관계, 그 외 특이사항 등을 확인)

3-2. dataframe.info()를 입력하였을때, 데이터가 적절한 Dtype을 갖도록 적절하게 변경하여라. -> type 변환 문제.

해당 데이터셋은 결측값이 없도록 구성된 데이터셋이다. 따라서 형 변환이 자유롭게 가능한 조건을 가지고 있다.
- 대표적으로 int, float, object, bool, datetime, category형이 존재한다. 

3-3. data셋은 훌륭한 형태로 구성되어 있지만,
cut(가공 수준)이 5개, color(색상)이 7개, clarity(흠집)가 8개의 범주를 가진 데이터셋이다.

따라서 전처리가 필요한 단계로 보여지며,
cut과 color 열에는 LabelEncoding을 진행하고
clarity 열에는 OneHotEncoding을 진행하는것이 좋을것이라 판단하였다.

사이킷런 혹은 판다스, 그외 기타 패키지나 사용자 정의 함수를 활용하여 라벨 인코딩을 진행하여라.
이때 라벨 인코딩의 순서에는 변수의 순위를 고려한 인코딩을 진행하여라.

cut은 가공수준의 단계를 나타내는 수준으로, 가장 좋은 단계부터 순서대로 기술하면 다음과 같다.
Ideal
Premium
Very Good
Good
Fair

여기서 clarity는 결점의 단계를 나타내는 범주인데, 가장 좋은 순서부터, 가장 나쁜 순서까지 다음과 같이 매핑된 결과이다.
FL	Flawless
IF	Internally Flawless
VVS1 Very Very Slightly Included 1st
VVS2 Very Very Slightly Included 2nd
VS1 Very Slightly Included 1st
VS2	Very Slightly Included 2nd
SI1 Slightly Included 1st
SI2	Slightly Included 2nd
I1 - Included


3-4. 위 데이터 셋을 train셋과, validation set으로 분할하여라
이때 train set은 전체의 70%, validation set은 전체의 30%에 해당하도록 구성할것.


3-5. 원하는 회귀 모델을 선정해, price값을 훈련, 예측시켜 보아라.
아래는 xgboost의 기본 형태이다.

from xgboost import XGBRegressor

model = XGBRegressor()

model.fit(X_train, y_train)

y_pred = model.predict(X_valid)


문제4 주어진 Sports_and_Outdoors_5.json데이터는 아마존의 2014년 Sport와 Outdoor상품의 review정보를 담은 데이터 테이블이다.

4-1. 
-데이터 프레임의 열 조작하기
-데이터의 helpful열은 도움이 되었어요, 도움이 되지 않았어요 라는 정보를 담은 리스트 형태로 반환되었다.
-우리 분석의 편의를 위해 [int, int]형으로 구성되어 있는 데이터를 두개의 열로 나눌 필요가 존재한다.
-따라서 helpful열의 첫번째 요소를 review_positive, helpful열의 두번째 요소를 review_negative로 분류하고자 한다.
-최종적으로 데이터 프레임에 review_positive과 review_negative열이 추가된 데이터 프레임을 가지고, helpful열은 제거한 형태를 만들고자 한다.

4-2. 고객의 리뷰가 얼마나 도움이 되었는지 긍정적 평가 받은 횟수와, 부정적 평가를 받은 횟수의 합계를 구해 보아라. 

reviewerID는 중복값이 존재하는 데이터로, 한사람이 여러개의 리뷰를 할 수 있는 형태입니다.
따라서 reviewerID의 긍정적, 부정적 값의 총 합으로 교차표를 구할 수 있습니다.

4-3. 고객별로 리뷰를 실시한 횟수를 반환하여라. 이를 내림차순으로 정렬한 값을 출력하여라. 

4-4. 데이터를 overall을 기준으로 오름차순 정렬하고 인덱스를 재지정하여라. 이때 인덱스 값은 열로 반환하지 말것. 

4-5. 데이터의 결측값을 탐지하고 해당 열이 무엇인지 기술하여라
4-6. asin열은 리뷰한 상품 명을 의미합니다. 따라서 해당 데이터셋에서 고유한 상품의 수는 몇개인지 확인하는 코드를 작성하시오.

4-7. 결측값에 대해서 적절한 처리를 취한뒤, 해당 파일을 저장하는 코드를 작성하시오.
